name: CI_pipeline
on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  CI_jobs:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true

    permissions:
      contents: read
      id-token: write # Needed to request OIDC token from GitHub
      statuses: write # To report GitHub Actions status checks

    env:
      GITHUB_PR_SCHEMA: ${{ github.event.number }}
      GCP_LOCATION: europe-west4
      PROJECT_ID: ae-terraform-2025
      REPOSITORY: ae-2025-registry
      SERVICE: easyconvert-api

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Changed Files
        id: file_changes
        uses: tj-actions/changed-files@v46.0.3

      - name: Print info
        run: |
          echo PR number: "$GITHUB_PR_SCHEMA"
          echo Changed files: '${{ steps.file_changes.outputs.all_changed_files}}'

      - name: Run Super-linter
        uses: super-linter/super-linter@v8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BRANCH: main
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_PYTHON_BLACK: true  # formatting
          VALIDATE_YAML: true

      - name: Authenticate to Google Cloud with Workload Identity Federation
        id: auth_gcloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/264268171873/locations/global/workloadIdentityPools/elif-github-actions-pool/providers/github-provider'
          service_account: elif-github-actions-sa@ae-terraform-2025.iam.gserviceaccount.com

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Docker auth to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{env.GCP_LOCATION}}
          username: oauth2accesstoken
          password: ${{ steps.auth_gcloud.outputs.access_token }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GCP_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      # - name: Build and push
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     dockerfile: ./Dockerfile
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
